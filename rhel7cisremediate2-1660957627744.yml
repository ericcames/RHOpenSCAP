---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.
#
# rhel7cisremediate2
# https://console.redhat.com/insights/remediations/19f3e490-4508-4cc0-9ba4-bec31a62f372
# Generated by Red Hat Insights on Sat, 20 Aug 2022 01:07:07 GMT
# Created by zigfreed

# Add nodev Option to &#x2F;home
# Identifier: (ssg:rhel7|cis|xccdf_org.ssgproject.content_rule_mount_option_home_nodev,fix)
# Version: undefined
# platform = multi_platform_all
# complexity = low
# strategy = configure
# reboot = false
# disruption = high
- name: Add nodev Option to /home
  hosts: 'rhel7.internal.ames.net'
  become: true
  tags:
    - CCE-81047-3
    - configure_strategy
    - high_disruption
    - low_complexity
    - mount_option_home_nodev
    - no_reboot_needed
    - unknown_severity
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldXOVNUR0Z6ZG5jMU9FUXJhalZ3VGtGUmFqWkVVUzh2WlROeFox
      bHBUVTRyZEZGRVdVeHNjbmM1YjBaemIxaDBLMjR3ZUhBNFlrOEtWVXRpTUVabVVXcFFUUzlPUms1
      RlNsaFdVMnc1VG1vd1JrTlhOSHBoWVhGNWVHdzRNekpTZUZKM1RYWktjblZRVVc1bFp6aGhjV1ZO
      U2xsS1pDdGFjd3AwVWxacWVsZDRNSHB6WVhCa1pEUlFSMmhyWWt4b1pFZGxWSEJtZDNNM1UxRkxl
      a2xEYlhkRVFrMXRhMk5ITDJwTk56UkJjMHRvYmxWQk4xWXJNbFVyQ2twdFEwVlhkVFZSUkhKdE9H
      bHhOWHBTZWxGa00wOVdTREEyZFVkQ1FVWnJZV3g1VkVWMFQzY3pTekZHYTA5Nk9IZFJOMnh2TWtG
      R2QxTlVOM0JqWmtrS1NrOTZhVWRWU1VwR1lsZHlNVzlvUlVOdE1VNUJUSE5VWkdrMlpreE5hVEV5
      TnpSeGFGTkNjRzVLUjJoalJtSnhVbEpQWm1SUU9IbHFWMlpqT0Zaekx3cFRaR1Z3UkZSTVprTkZM
      MFp0UkVKRmNuaFpTelZKZW1WNFF6SXdjMGN4ZGk4MlFUTnlSakZSYml0QmRtRm9VV2R2VERkM1Jr
      WnNiRU50TlZsSmNGa3pDbkl4Ym5RelpuRkthRTl6WWpocGRtNVdNV2w0VUhWV1NETjBMMk5KZVZO
      RmJsWnJTbkJoWVZGUVRVMUJjRVpJS3pCMFdUQTNTMUpoVFVsMlRFcG1MM0VLV0hGc1RTODBjR2h5
      Y0dkek1XVndhRmhXV1V4WVQyZzNTbXQ2WVdKdGEyMDVlblZtVm1KSU5EbElWRTB3UVRWNGVXdGpP
      SGw0SzJwblVVNUZhWGRRUkFwcmVIWnRSSEpuVTNaSk0ybFlXbXMxUTA5WGVrOVBUM05RTlhGamVF
      SnNNRXBxTUVSd1lqQkNhVEZKYTNNelRuUnpUamhPZWtoYWVIUlVVVkkxY1ROUENtVlhVRlp0YlhO
      SEt6VmlZMXB3VTFGamRtWjZRV3cxVEZaT2VFVTNlREJwV1ZKRGNHOTVha1I0WlVwNVdVcDFVRFpU
      Tm01UE9YRlVRbVlyV0ZJMGRta0thVmMxYVhCVU5ESm1MMGRITXpGamMwUk9WMVJoVTFoTEwxUkRX
      amd6UVc5YWQwRlZiSFo1VEROc2IzQkNSVkpwWld3eVZreFVXWFZtUzA1SU5rTlROQXBVVW5VNWNY
      ZzVhVGxVVVQwS1BYZGpNWEVLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/home'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: If /home not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /home
            - ''
            - ''
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)

    - name: Make sure nodev option is part of the to /home options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nodev" not in mount_info.options

    - name: Ensure /home is mounted with nodev option
      mount:
        path: /home
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab" | length == 0)


# Add nodev Option to &#x2F;tmp
# Identifier: (ssg:rhel7|cis|xccdf_org.ssgproject.content_rule_mount_option_tmp_nodev,fix)
# Version: undefined
# platform = multi_platform_all
# complexity = low
# strategy = configure
# reboot = false
# disruption = high
- name: Add nodev Option to /tmp
  hosts: 'rhel7.internal.ames.net'
  become: true
  tags:
    - CCE-80149-8
    - NIST-800-53-AC-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_tmp_nodev
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldXOVNUR1E0ZG5jMU9FUXJhalZ3VGtGUlp5OW9aeTh2WWt4aGNp
      OXlaVE5DV2tsTFIyWkZNMlF6Y2pocVJtdzVLMk15YVZkVlJYUUtNa2RKYkVoR1VVd3djVUpaV0hr
      MlRsbFpiemszV21wRmRTdEtNMFJoTkhoNk9UQkdMMGgxYVRrck56SktZM0pPY2pVdlpqazRUMUkz
      T0cxbVVHUjNlUXBDSzFaeVQwVkpVell4WVd3eFJYcHBTMmhxVFVOaFUxbHlTbmxEUzNwMlRHNTBV
      blJQYW5BMmFGWk1aalJuV0RCcmNVUnpaVU4yU1dseFRqaERUV2gyQ2l0U01VaE1Ua0Z1VGpKMU1I
      cHdVU3MxWWlzNFYwZElUek5PUTJzM2RFZEpjamR3V25aWlZVeE5WVFpZT0dadFNUaDRlV1JZZW5v
      cmRISnFNMGQ1YURJS1ZqRnVZMUZ2U0ZjM1NrRlZWelJwYzFncmVuZHhkVUphVkVnNGNFNDJjV3RI
      VW1GcmFtTnVSa3hYUzFKTVJ6ZEZZbkJSUlc1MFQzQnNibTVXVEU5R1NncFdZVFl6UnpOTGFFSjZN
      SGxTT0hGT1NrYzBXazEwTVZKSVUwMWxhRGRuYVZsbGFWRXdUa2RLYVRORWRGaHpObVExT0VSek9U
      TTBOMGhIV213eVVHZHJDaTlNVmpCalVXcEtXbGhvY2xveWFYSkpkM2xGZG5kRVNscDRTMlV5ZVhG
      S1MyTllTa2c0ZDA5dlZHWTFMM0l6TDFKTWNtcFdlVFZ5ZVdobk4weFlUblFLUmxCMGVYcG1abFk0
      VlZWaWRXcFljVmRYVkU5b2RIUnRjbm80U1M5bmRHbFZUMnB1ZDFsUllucG9MMUZzV1dnME56bDVS
      M05CWTJ3cldESkdMM0Z0WWdwSlpVWjJVaTh5WmtGb1RIWTBWMHMzZGxoR1RuaHliblJtVDNSelJH
      RklPV1JvZUVaU1FsVXhXR1p2VGpGdGJIRktTa3czVEhaQ1R5dEtaamxZTmxWV0NpOTVVV1ZzTjFK
      VVptdFdTMjlSWlc5WlpXMXRiRWRCTlhoVU9FZzRlWG80TjFZeGNsWlZPRVp0TDFkcWFrVktibGh5
      UkRNelpFTkhRa1JHTWpWRVFqUUtRbk53UzNKdWJUUm5SbXgxYVdaNk56WlhZVVEwU1ZwemNFWlBT
      SE5FV0VGR1EySnJkMk5sVkc0M1RVZHBVRzF6VUcwd1ZIRk1TR0Y1U0dGM1YxcDVLd3BzWlZWVmNG
      SkVkMHg2VFQwS1BUVndURFFLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: If /tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /tmp
            - ''
            - ''
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)

    - name: Make sure nodev option is part of the to /tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nodev" not in mount_info.options

    - name: Ensure /tmp is mounted with nodev option
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab" | length == 0)


# Add noexec Option to &#x2F;tmp
# Identifier: (ssg:rhel7|cis|xccdf_org.ssgproject.content_rule_mount_option_tmp_noexec,fix)
# Version: undefined
# platform = multi_platform_all
# complexity = low
# strategy = configure
# reboot = false
# disruption = high
- name: Add noexec Option to /tmp
  hosts: 'rhel7.internal.ames.net'
  become: true
  tags:
    - CCE-80150-6
    - NIST-800-53-AC-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_tmp_noexec
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldXOVNUR1E0ZG5jMU9FUXJhalZ3VGtGUmFtczBaeTh2WldjMWN6
      UnNSRTh2UjA5cFUzZHlZMkowYTFFeWMwa3pWMjUyVlZSU1JrRUtVVWQ0VGpOblZHaENXRFZDZHl0
      aWJGRXdXR0ZUUVZwa1QxUm9ZbkZtU2taNFpXaERXVTlIZUdnd1JFOWtTR1JtY21kUlYyTjRUVTFL
      YVVKTlJYUlhiQXA0VEUxa2J5OXhlbWxUTTJ4VGRXdENWMFZQYTBGMWJHZERPV3htU0RGUU1HVmxl
      VEJIUjNWT01EUnhNVXRPTW1ablIzRjJORmxVWTNWb1dVUTFMelEyQ2pabE9VNXRXR2Q0TUVad1NH
      c3ZSMUV5TWxNeE5rbFZXSHBsWmswMk1VUlVZbnB5YkdkWU5rbHVVbkZIYjNSdmJUUk9NRlZHYVV0
      NVYzUlpNMHQyVFVvS1VrdGpXRlZrZVRocWFXdDVVVUZNS3k5bFZYUTNlamxhWTI1NFZuRTNRMmh3
      VldkMk5rOTVOVWtyUWxJeGJtOUJSbTF6ZDJVeVlqTkdVSGR1VlUxSVNRcFJTWE5tWWtKWFUwRk9j
      MlYxWW5sRVFWSjVRVTVvZEVad2QxUlVSREVyY0ZrMk4wRXpNRFJoYlhSMVFuUm1aVk5LWnpneVVW
      WkNlRWhtUkROT2JWVjRDbE5RWkdkSFNXeHpabWhDY2xZeWJYUlJSM0ZxVTNwTVZVSmtSSE5MWkU1
      NVVtSlJUbkZsZEVaRVRqRmFTMVIyTnpBellpdHFRWEExVWxoa1FUVjBkM0lLVVdvMlp6VnNjSEJy
      VG5WVlZ6bHlRbmRLVkZBNU1XdzNRVGt2VkZSSFYyb3lPRkZSVTB4cVdrY3pWbk0xTmxkVmRXSnFX
      RXBNSzJGM2VtTlBSelkzTkFwaGVIZ3dZMDh6VFdKU2FHWTVPSE15YldORGJYUnJaMk51VG1SRlVW
      QTFkakV6VDJzeGJuYzBiV2RCUjNaM09EbHlhbE53TVVoUGVqaE9NbUpXT1hWNkNtOTBNMGREV2pO
      WlZVaDJNMHhDWXpJdldsVm9TMWd4U213M1JtOXFjakpyUlc5b1EzbDBRVFZpUm1KdWNsVlFTblJ3
      S3k4eFJXVkJVbmN3Y0VFd2FrWUtXbEp6ZEhKSVpHdHBXR0p2YzA0d1JWZzRZbE5IYWtKU2RIaENk
      VUprZFdGT0t5dGpWVkJUZVM4M2FWWk9jbE1yZG5reVMwUndVbm8wUkVSNVltY3pPQW80VDNreFFU
      UlpRMncyVFQwS1BUa3llVmNLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: If /tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /tmp
            - ''
            - ''
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)

    - name: Make sure noexec option is part of the to /tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',noexec'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "noexec" not in mount_info.options

    - name: Ensure /tmp is mounted with noexec option
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab" | length == 0)


# Add nosuid Option to &#x2F;tmp
# Identifier: (ssg:rhel7|cis|xccdf_org.ssgproject.content_rule_mount_option_tmp_nosuid,fix)
# Version: undefined
# platform = multi_platform_all
# complexity = low
# strategy = configure
# reboot = false
# disruption = high
- name: Add nosuid Option to /tmp
  hosts: 'rhel7.internal.ames.net'
  become: true
  tags:
    - CCE-80151-4
    - NIST-800-53-AC-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_tmp_nosuid
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldXOVNUR1ZOZG5jMU9FUXJhalZ3VGtGUloxVTNRa0ZCYkhGb04w
      Uk9aakJUZDA1bU1sTk5SazExYzNaSGJIRnBOakJaWkRaTFNFTUtSbkZtUmtOc1pIcHJaVEIyV1Ra
      RVZtWkVWelZqTlhKbk1tbHZSbUoyU2psUVozaG1lRVZYVnpkbGJISkRhVmhDS3paMlkzaHJXbXN2
      TTJ0bmVGbHZUd28wZDNaMk4yMXNXV2hYU21KaWFGQm9UV3R4VkdoRWFYWnJla3BJYW5BeWRuZGhj
      bFlyZHpkWlkzbEpTMHRSY1VsT1ZrWXpSbkEzZGpCM05tNTJWSEF3Q214NlZsSXlkRXBpT0dvdlVF
      OHdXQ3REV0dWQlFtMUJXSGg1WXpWMVNUWnJZM05yZEc5WE5tTmtVa3B1TjBNdlUwdFdla3RUUlU1
      aVFYcEJSVkJLUW5nS2JVUkNjVkZXT1ZSdk9URjBSVTVhVm5KdmNXTlFOVWxEVldGVmFsbHFhbXh5
      ZEhwMWExVXZURVJZT0hsQlUyRm9iRXBoU0RsR1IyNWhNbEkyS3k4cmF3cHVZV1I1TWxGWU5GcEta
      M1pIVFV4SlVGaGpVR0pJUWxjNVRERm9aMDlGU1dsVGVVMUJWRmt3YWxwd0x6bE1hRXRpWVVwalJr
      NWhPWFZpUjAxdU4ybHJDa05ETmxsaVp5OHpOVU5WUWtGb0t5OWpZa0V4Y1Vjd2MweDVSVzVFZWpO
      dVIzZHhZMGwyY1VKcmNrNWtZalpPVERWcE9GbzNZVGRDTDJsRGIyTm9TbmtLYlhFMlprMUpiSGt5
      UkhabWNrTm1XWGRoWTFST2NqSlNPWGhSYzJScE5XczVUbEpuYURkRWMxSlFiamgwUTFjM1NrOVBS
      RVZEVVdadVFXbDNPVWM0T0FwMFYwYzFUMDh5TjJkV1ZVVTRZV1VyWVRjek9EVllWelpNVWs5TWVr
      czRXaXRCVUN0NmJ6ZDZhRWxtYkdSUldXcE5ja3hqWVV4aVdTdGhVVk5uWm1rM0NsbE1Nbkp6V0ZN
      MVVVbDNaR1Z4UWsxVFducFpOMjlSU2pWWVVYQnZOMGg0V0VoMWMwVlpXVmhuV1RkQ2VsZHFOekF5
      TjJsS2MxQXdTRVkyT0ZsYWRWUUtNbEJIY0ZaRmRtOTBTMHROWkVjNWNYWnFla3c0YTJOM2JVaEZR
      VkZHUTJrMmVuQnJUamxWV25wbVRXeFBjVUpKUVM5akwzcHhUMmhDZDB0UkwwTklTUXBLTlhWTmQw
      RmpUelZTTUQwS1BTdHZWM2tLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: If /tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /tmp
            - ''
            - ''
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)

    - name: Make sure nosuid option is part of the to /tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nosuid'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nosuid" not in mount_info.options

    - name: Ensure /tmp is mounted with nosuid option
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab" | length == 0)


# Add nodev Option to &#x2F;var&#x2F;tmp
# Identifier: (ssg:rhel7|cis|xccdf_org.ssgproject.content_rule_mount_option_var_tmp_nodev,fix)
# Version: undefined
# platform = multi_platform_all
# complexity = low
# strategy = configure
# reboot = false
# disruption = high
- name: Add nodev Option to /var/tmp
  hosts: 'rhel7.internal.ames.net'
  become: true
  tags:
    - CCE-81052-3
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_var_tmp_nodev
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldXOVNUR1ZOZG5jMU9FUXJhalZ3VGtGUmFEYzFRa0ZCYVhsdlRq
      WkxiMnd6UjBGcmVVaG9Wa3A1VjNkeWF6WkdPVTV6UkU4eU4yTUtiMVpXZGs5UVZuSnJObWhqU1do
      Sk9DczVWRlpWTXlzNWRGTTBjSGhLYVZGTWJteFhURVZOSzNCTFlrVXlMMHhGTkc4eFVTdG1Tbkl4
      VGtaUFdqQkZiQXBEYzFFd1dXa3ZjbXhhWldwMmFEaDZRVU5CVlZKeVZsa3lUVWRKTUZoellsTm1k
      M0pzZEVFMFVVZHdVSGxIYVhoeUsyRm1lWGhPVkdWa1NuTnZTbXRpQ21reE4zSlBWRlJXVmxsYVZt
      MWpTR1ZZT1RRd0szRlJZVEZYYldKVmFWa3Jla2RTVWpoWFZEaGlUbFVyTWxaM1dHeElTRXBRZUU5
      NVlWVnVXbEpaTVZJS2RuRXdNbmQ2YmxZd04zSkhjSGRIZURGSE1Xc3ZRMEZpZUZOdWIycFNVVWxr
      ZUZGWU0zVnJkVzlXWlRkVFMyVjRlVmhaYkRaM1FtVmhXREkxYjBZelV3cFJiSFp1Y0RKSGFURlpi
      M2s1YlhsS1ZVZFpjRmg2ZUhGbk1VbEpabXRDTW1ab2NsUlFRVEZvU2xOMlpFTnRUMlE0YzNaek16
      ZHJkamh4WlZaVVZFNTRDblF5VVRKV01rVjVSVlJ0ZVc4MFNEWXhVSFpMYWk5TU5YTnVWbk5hTHpk
      NmMzVllaMDFGWXpoTmFVWnZiM1I1UW5SWFdWSjRaVzgxTmpFME1teERWMDRLVkRVd2FsaDNabXhP
      Y25WMUsydFVjRUpYVlU0elVVdE5jWEphVGpGeFNtSXlVVzlZZFhOM1lXeHFhRGRZZVM5WmMxTkJk
      a0ZUU1U5VFNFNWpiMnB4UkFwQlZFRldUakoyU1dwcmNYWnJNRU5vTjNwb2FrdHVaMVJDWlc0eVdI
      aHdOMEkxUkhsQlRuQkNNRU5tTkZsR2RsWmpPV0l4TjA5VEsyRjZZV3BKYmxaWkNuaEhja3gwTWpK
      NFN5OU5LMDl1VWtkRWVXSXJWVEExVUM5cE4wNVpRMVJOY1dsTWFrNHdVSFpZUzBKbmJFSlNSSFZH
      Vm5GYVdESmhTWFZ0UVZGVFV6UUtlblZSVFhOMmNHRmFVbTlZWm0xa2JEUjFZbGxSUkVSaE0wVTRh
      MlpDTTA1WWQwOXROSEZLTlZkcmIyeFNNRzluWTBrNWVFdGpOVmd5Yml0MFZuQnhhd3A1UVhSV09F
      RkxTRXd4YnowS1BVWkNhR2dLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: If /var/tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /var/tmp
            - ''
            - ''
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)

    - name: Make sure nodev option is part of the to /var/tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nodev" not in mount_info.options

    - name: Ensure /var/tmp is mounted with nodev option
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab" | length == 0)


# Add noexec Option to &#x2F;var&#x2F;tmp
# Identifier: (ssg:rhel7|cis|xccdf_org.ssgproject.content_rule_mount_option_var_tmp_noexec,fix)
# Version: undefined
# platform = multi_platform_all
# complexity = low
# strategy = configure
# reboot = false
# disruption = high
- name: Add noexec Option to /var/tmp
  hosts: 'rhel7.internal.ames.net'
  become: true
  tags:
    - CCE-82150-4
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_var_tmp_noexec
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldXOVNUR1ZOZG5jMU9FUXJhalZ3VGtGUmFXeEpkeTh2VmpKQlEw
      NXdNWGhvT0VNNFZHeFpUV0ZEVGtkV1dtSkhaMjQwVUdST2RuZ0tia05JTkVkT2JFNVZiR0oyTDA5
      SVdraGtXWHB4UkdSSlpWWnZTbk5HV2xSQ1lqQnVTR2hZWW5SNFpHWmhXWE5ZVDFGV1NrVjZjbWRM
      YzJaT1N5c3hXUXBaVVVNek5IRmtiWGxQUkVVek16TTRWMFZyY1U4NWRrbzVMMUJKY2pWSVl6RmxT
      VU13TlVoVEswNTNka1E1VTJsTU1XazNOa1Z5UWtObmQyZHRXR3RNQ2xWcVJtZFBhMlI2Y3pGdlFr
      ZzJiMGxVVDBsV1lUaFVPRU5FZGxFNVlXMUVUV2MzYVVzeVZGbEdNM2M0VW1kUGFURm1hMUZrY2s1
      dmVEWlJWMHhNTjBvS2FEaGhUR2cxTHpCMWJ6bDZUMFJaVjNONlUwczVZekZ5ZFc1SGMwWk9OV3RX
      ZWtjMFMwbGhUbk53V2xFMGF6Vk5XazVUVkRKVGFVaE9aMlpLZFZONlF3cDZaRWhWU0VvcmRteFZW
      VXN3TW01alZEWnNOSFZaVkZob2NFNDNTRXhPYm5aMk9HTk9hbTVCY0V4UlJ6TnZjWGRQUm0xNVpW
      ZzRkVVZ6TjJaQ2VsTkpDbEpzV1d4MU9GTkRNVGM1UTNsb00zTk9kamR0YnpKc2EyOHpSVEZ2TWpZ
      dlVqVXdVallyTkZKWFRuWmtUVGxwVDFndllWZEZNMUpYVFhsMlRsSjVTaThLVlRGdldWVlBlbkJR
      VkV4ek9XaFlNR0Y1U1NzMlpUUnJZVk5PT1VSd1YxcG9ZbEY2VVZKeVpERkhjRVJ2TXpnMFMzVlhk
      VUl5YkN0cVJGWktZbWRvZGdwWlJrZEZZbmxJWlVSb1pGSlFZWHByT1RaS2QzWk5VVlZQV1dZdldt
      aHdSVEY1VDBncmJsSlBhRTlWU1RaME5XZzVRV0ZGWjNSeFlWSlpUek5uVjFwWENuTnhTelZ6Um1o
      ckwwZG5ORXRFWkZNNFRWTkROV0ZXUjBaNlVHODBWRGhHVERnM00yMUpMMnBsWkd4QlFVMDBVblpP
      ZFc4NFNFcGlWblYyTVdSbGVWVUtNa1JhTHpKMFMxbzJlRXRTVG5kT0wxbG5PRE5GTkRGTWNqWkNN
      MlYxZERWNk1tNUtORFYyYXpoTk9XVnFVSFpwVUV4QlJtNHZXRlppZFZsRmVYbFlTUXB2UlVKTVZX
      TnZaUzlrWXowS1BVbHNMM0VLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: If /var/tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /var/tmp
            - ''
            - ''
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)

    - name: Make sure noexec option is part of the to /var/tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',noexec'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "noexec" not in mount_info.options

    - name: Ensure /var/tmp is mounted with noexec option
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab" | length == 0)


# Add nosuid Option to &#x2F;var&#x2F;tmp
# Identifier: (ssg:rhel7|cis|xccdf_org.ssgproject.content_rule_mount_option_var_tmp_nosuid,fix)
# Version: undefined
# platform = multi_platform_all
# complexity = low
# strategy = configure
# reboot = false
# disruption = high
- name: Add nosuid Option to /var/tmp
  hosts: 'rhel7.internal.ames.net'
  become: true
  tags:
    - CCE-82153-8
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_var_tmp_nosuid
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldXOVNUR1ZqZG5jMU9FUXJhalZ3VGtGUmFGTkJRa0ZCYURWc1ZV
      TTBVV0YwU0hWblVVMTZiUzh4WW1FeE9GUnlhVGszWW05NlVXd0tVRTVhTm5VdlNHZHJlRlF5ZVhv
      ME1YaExXVkJpVkZFcmIwWlVNblZtZEU1WGEyZzNlbmhPVERsd1pFaDBMMng1VlVnNWJtNVZZWGMy
      VUVaUU9ISlJWZ3A2YmxrMmNEbFpVa3c0UVcxQ1luZEVlRXBXWkhGMmRHWldSVlZFYkZwSEwwaG9X
      bFJvVjFORmRGY3lObFJtZFdSaFlUTjBPWEJUZDBWWFZVTlphREJOQ2xOR1VVTmtaVUZMYW1nMmMx
      SjRLMFo1UWpaaE9YSmlTMVJWU1dKamNUTlVOVkJJVVVkd1YxUXlkbkJWTjNkb1ZqUjZVbVp1T0Zs
      RGEycElRbUU0ZURFS2NuTjVkRU5SVFZGTlRERnplSGswYVVGTFVHUkZRVTVoYVRCWk1qSlZORkJw
      Y0UxWU9FVXJPWEZ6TVVvdk1XMWxOR1pUVUZaM2Nub3laMEZWTVc5eVl3cFhWa1J2UW5wbGMzRkpS
      VlpsUWxaRldWSlhVM2x3VTBWelYyMVpUazVVTUZScFlWaDNjMms1UkROMlYydzJTblZxUkhOcU1G
      cHlUbXRFVm01cFdYUkZDbVJoZUhSM01tZFRVRTV6Y1UxcWQzbGtXamcxUVZJeGJURldXRWd4T1ZW
      Q01YTnllR1puUlZGUFNuRjFTWHB5ZGtsWllWa3plblZEVWtoVVUzVXliVFVLTTNkbldWUkxkR2hI
      YzB0b01VczNOVEYzUWtzM01VdFhhSGhUTlZoTlZqWkRjMnRGVVVjd09EbFRRblpPY2psV1N6YzFP
      VGRoYjB0a2VsUmlWbTg1WndwWlkyeGpjREJLT1RFclRHYzBkVGhTTTNSd04ySk5Sbk55U1VGdGVt
      czFUV2cyYjNVNWVVMVhMMUUzVG5SVmJIbGpVamxoWVhWalJWazJiM3BFWnk5UkNsRTRTbXhFTjNO
      eVUweEtaRXRDT1N0Wk5VdG5kVlZqYVRjeWFsQlFialExVUZSWGMzYzRVa0pMVVRnM2NtOVJjRWR0
      TW01TGJVdGphbTFzWVdkQlpYa0taMUZ0YW5FeWVXaDRablZFTkZoRGJuQlNUMWhIYmxwWWJIbG9a
      bFJQVUVOcmVqWTRjWHBhT1haa2FqVmthWEJ6Um5KbmNIVm1NVFJwYkhwTVkyUXlVd28wUlRjeldI
      VkVWSEkwTkQwS1BVbDVUR2NLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: If /var/tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /var/tmp
            - ''
            - ''
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)

    - name: Make sure nosuid option is part of the to /var/tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nosuid'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nosuid" not in mount_info.options

    - name: Ensure /var/tmp is mounted with nosuid option
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab" | length == 0)


# Ensure Sudo Logfile Exists - sudo logfile
# Identifier: (ssg:rhel7|cis|xccdf_org.ssgproject.content_rule_sudo_custom_logfile,fix)
# Version: undefined
# platform = multi_platform_all
# complexity = low
# strategy = restrict
# reboot = false
# disruption = low
- name: Ensure Sudo Logfile Exists - sudo logfile
  hosts: 'rhel7.internal.ames.net'
  become: true
  vars:
    var_sudo_logfile: /var/log/sudo.log
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldXOVNUR3hOZG5jMU9FUXJhalZ3VGtGUlp6azRRUzg1U0drcmFu
      ZzVjWE54UTFaeU1razRiM1ZVV0UxV2IyRlBURlpOU1RSNkwyb0taREJRU1hWcFUwMXRNRmQ0TWxG
      R1pHeFhSMDF3U0RWMVVrSm9OV1Z2TVc1bmJGaEVaRFpSS3psalN6Tm5OaTg0TkhwYUsxUm5UbTgz
      WkZWUVFWZDFOd280Y21GNFYyWnpSV2N2VEZwdVJXUmtLMnByUmxodGVWTTFNM0EwWVM5Sk9EUjJL
      ekJOVVZaWFNrUkNPVlpCZUROcFV6Tldia2RhVVVzcmFraEZhRTVOQ21SSGJGa3JNMDltYlcxQmVX
      bFVSQzl2ZFU5eGJIWXpValpEU25WcWRVcEtiMU5WVFZaTVZrdHJSblUzTnpNd1JVbHlWVmhUUTNJ
      NGFWVjZPRk5IYkRrS0wxSkZjR0ppUkdoeVlsbzJkVU5XSzJSbVVIZFNabWxoVkU5S09IUnRVemN4
      ZVdWamNtRlhOMEZuU3k4eFZqUmFhRVZDWmxaWlZHVk5OVzkwVmxrelF3cGhRazV0YUdKbE9FNUNU
      bUptY1M5S2FtVnBNazlCUTBWd1ZqQkdiREZtZERJcmVsRkVTRlZhTkdwWFlVbFNWbFpWVUVOTVRI
      ZEVZWEpLZURNMFQyTklDa1ZwTWt0MVZWUkRSR2R6V1UwNWRuUk9WMGN6TkVwUWIzYzNMM3BYY0Va
      RlluQlZhRTEzTVhseGNGTXJiRWQzVW5WYWJIcDVlUzh4YkZOblRrOW1jVTBLVmpGNE9GTm1VbGhs
      VVV0cGFWSlFialkyZFRodFdWTklXWGR4U0UwNUx6bE1UakExYWpkTU4xRlJNbTVIWTJ4bGRqbFNX
      RlJ2ZFZwSFZtOUNjR2N6VmdwcVpYVnhSVEkzV25RcmFrOHJZMFZQYmxSelVUUktWakl5VW5nM05t
      dGFabVZMUlhaU2RFMVlkelptUW5KRVMwNXdUV1pNU0ZVMmVWQm5UWEZ3T1ZOekNsTm5aVkYzVTJS
      TFpqZDFiekZzYXpobVZrTlRhbGMwVUZWNGFXWlNkbGx3TjFsaGVEVlBSMHRRVWl0V2NXRlJjVnBx
      WW5sbU1HdDRSMFoxUzIxV2F6a0tNRzVxVTFKV1dVTllaSFJVZEZKcWJscExVRTFvUkhoV2MwSjBW
      R1pIUjJ4bFdVZFpNa1ZTYTFsM1YyRmljVlZsTnpKdFEyWnZOakJpVFRrMmRXSkVjZ3B3UW1OQksy
      TTBNVEZpYXowS1BVdG1abWtLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tags:
    - CCE-83600-7
    - low_complexity
    - low_disruption
    - low_severity
    - no_reboot_needed
    - restrict_strategy
    - sudo_custom_logfile
  tasks:

    - name: Ensure logfile is enabled with the appropriate value in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults\s(.*)\blogfile=[-]?\w+\b(.*)$
        line: Defaults \1logfile={{ var_sudo_logfile }}\2
        validate: /usr/sbin/visudo -cf %s
        backrefs: true
      register: edit_sudoers_logfile_option

    - name: Enable logfile option with appropriate value in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        line: Defaults logfile={{ var_sudo_logfile }}
        validate: /usr/sbin/visudo -cf %s
      when: edit_sudoers_logfile_option is defined and not edit_sudoers_logfile_option.changed


# Enforce usage of pam_wheel for su authentication
# Identifier: (ssg:rhel7|cis|xccdf_org.ssgproject.content_rule_use_pam_wheel_for_su,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv
# complexity = low
# strategy = restrict
# reboot = false
# disruption = low
- name: Enforce usage of pam_wheel for su authentication
  hosts: 'rhel7.internal.ames.net'
  become: true
  tags:
    - CCE-85855-5
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - use_pam_wheel_for_su
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldXOVNUR3hqZG5jMU9FUXJhalZ3VGtGUmFHSjNhRUZCYVc5YVJH
      eEZNVGhxU2s5NFl6WkNaRVVyUnpWSmJ6RXpaa1JJT0VFeVUwVUtObWxZYjBReVFXeGFLMFpZVlhS
      QlYzbGFla3hCZFZSWWFVMHhSa3g1UVVkUFFXNVdVbFpOTjBaTlVIZENiRXBpVjFaR09GWTROMjVP
      VTFwTk5WUjNTZ3BVTlhSblZISm5kRzFyVnk4clVqSnVUR3RCTm05WFRWZDJWbkl6UzBkNGFUWnZZ
      MlJ5V0VKdGFqRlVNMkUzWWk5Q1RrWTJjbk5CVG1rd2MwcHJOa0Z1Q2psMmN6QldaVk1yWlZOVFJV
      RnhVV1I1WmpKd05EbFJZWGd3UmpreE1tdFpVblJ1YjNCR2RXMHdVbTV1U205cVdWbG5lVVowZEdr
      MVJIcEtWVmRsYmtvS1NWWkpPR1Z3UjNWVWIwRlZheXMzVG5wS2VUUXhLMHRxU0hOdlVIcG5LelF4
      TDBaVFZuTklXbkJFWlVSREwwZ3hjbkJUYWxoc2FERm9RMnRETDA1UU53cE5lbnBqWkRRMldVZGpj
      SFExZVVkVGR6bGliMGNyZWpOM2JtMHdUV0ZXVVZKM05FaHlWV2x6V0RNelRrOHlPVlpxUmpOVWVq
      Wm9ha3BSU1RZellTdEtDbWd4TjJJNVptVk1WRm8yTVV3d2FtUXhkbFJ6SzNWT2RteHpkRTlYYjA1
      NmJuSXlWbmRzVW1OdFFrSkpLMVk1ZVZKSGNsRkRaVkJ2VFd0S2VsbE9jblFLTURCQlZuRlhiVFJQ
      YUZwc1ltSjNVbEZKWWpOM1owRldVaXR5YjA5bk0zUm5VbVJ0VW5jd1QyTklPRmQwVFhobmJHOXZX
      SEJsWmlzdmRUZDZVRmt2YUFwTlYxcHNVWEZxYmtaeVRVTlNObmMwVlVwb01rWndhRnA0ZGxsbk9Y
      TTFjRzh2TVZBeVJXRXlRV2RSWVVKNk4wUllUWFpET1dGb1NITTJRMHhtTW5CSENrTm9hVUpySzJG
      NVoyRm9kVmt2UkcxVldVOW9TMGxVVVVaVVVGRmFVa3hqZFhWTmRYaElZVFo1YTFvdlJUQjFhMlI2
      TjNGMlFrSlBjMGhJZGpCUVowNEtla3hOV21JMWJESTNPWEpWYlM5dVQyeGhVREpsWkZveE5FRjFi
      M0F4WlVKYWJuZGtjRTExWmxCSGNEQnBXU3RSZG1wcGFFaG9VR1IyYzFWU1YyMHhVZ3BYUVRjMlpr
      UnZZMHhrTkQwS1BXczNXbE1LTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:

    - name: restrict usage of su command only to members of wheel group
      replace:
        path: /etc/pam.d/su
        regexp: ^[\s]*#[\s]*auth[\s]+required[\s]+pam_wheel\.so[\s]+use_uid$
        replace: auth             required        pam_wheel.so use_uid


# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: "rhel7.internal.ames.net"
  become: true
  gather_facts: false
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldVaHBRMVk0ZG5jMU9FUXJhalZ3VGtGUmFrMUVRa0ZCYTJOeE1W
      WlhVbEF3VUVoMGRIRjBWMGt4UkZSdU4zcE1kbFUyU0hKd2QxSUtUbkJ3Um5SWGJWRktiM2xxYm1w
      bE5XUmFSemMxUTNCU1kzZGFPRU5XVW5sRlRVRXpVREExZW1Kc1UzSnFWbTUxVW5oNlpVeG1SbTFy
      YW1SRVJWcHdjZ3ByWTJ0d2FFazJSVUpIYWtJemEyaGFUalJ5YTNwUWRWQm1PR1pMUVdsSE1ESmxk
      SGhXVFZWV01tZHRkV3c0UjBJMmRIcEpkRk5uVFRGQlFYQkdORTFRQ2s1NFRDOUpUMlY2ZFdRMGFt
      VlFaV05KZWpGS1dtMTVkVGgzWTNoVFZqWkpTbTVPU1VGSGVHYzVWRUpVYzNNMFEwbHVaVlZXY0RG
      VWRrUlFPUzlHVXk4S2VGaFlaMFphWlM5VlZuQjBaRzA1ZDJkbmRVOXRiR2hvWVZCTVZHNU5Tbkoy
      UVRsV2FVUnZRVzV2WWt0b1VIbEtZMHBSYjJOTFdrRlRjVTF6ZWs1VWNncHVNek5JYlRoUk9IQnRW
      VTFLYldobU9VRnZkM2x4VW5GWVVHeHpXVGwzT0UxRU1WQkZjR3htY2pJeVlYTjFMMHhvYjNGNlIz
      TmtOMUUxTTJwdFMyNXBDaXM1Y0VjeWEzVkNSVXhpVVhoblRHcERiVlZsUzFCdmJuaFhjM0JuVFZs
      M2VYQjFaVFJvYnl0dmFsZG5WRGR2ZG1GbFRFNVRTMkV2UkZOS2JEWldRaThLZEd4YUwxUXJPRFZr
      Ym5ZclNWb3phbEJTZFM5bVpuZFBkVVpVV2xoNmVGTkJUalZSV1M5ak15c3hhbUZSTDBKeFdYTmhi
      M2RpUkZreGRXUXZVeXRsYVFwa2FEa3JWRkV5TlVKa1NYa3hibGh3ZWpoV1JHbHpjbEp3Y0VrNWFs
      SldWakkwTVVVelRVWkhka1ZaTm1aVFYzSlZWMWMzY0RKbFpUbGphelpOVlUweUNrNUZjRXBLWm5G
      UFNFdHBjRXRPZVRKdVFVRTJURmcxTHpNeGFWSk9VSEZZVXpKRVdqSlpkbVZTUTJOMmVDOHZPVTlo
      UzFWd1FsZElZVmxYYW5STU4wWUtSWFJWVEZGeFZESkJPVTF3WjFSU1RtOU5WbEZ4Y1haQ01GUlBP
      WE00TmxoTmRuUkdRa1IzYW5SbWIxSm9NRnBEYlUwME1FRlhRMHBxT0RKNlduTlRZUXBCYXpkUEsy
      UkpkMFl5VVQwS1BWcEtiallLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action:
            module: wait_for
            host: "{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}"
            port: "{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}"
            delay: 15
            search_regex: OpenSSH
            timeout: 300
          become: false

- name: run insights
  hosts: "rhel7.internal.ames.net"
  become: true
  gather_facts: false
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldVaHBRaXR6ZG5jMU9FUXJhalZ3VGtGUmFXdDRaeTh2WmtaRFoz
      QXlTblIxVEd0UU5qQnNTa3BZYm1GU1JGTjVjVVYwU0ZSNlRGY0tOVlZSVlc5MWEyUmpVRFJVUlZn
      d01EaDFhRkJHUzFaSmVrdFVTR2RsYTFOaU1UUXlkMjlQYm5sR2VUUnpRbEJrZEZoaGREVlliWEp0
      VGxsR1EwaEVWZ28xYVhSdlNrcDBPVzg1UWtkQlJVaDVZMFJ3SzBoNVNqWXphM0paZVRGUk1rOXVU
      azF3VjJaSmNtYzJUakJXVTJoa1JtVk1lR0ppTjBaMlpFaEpjbFo2Q2pJNGFrdHhOemx1Tm13eUx6
      aDZZVkJSTDFkWVZIWkNaMDVhUkVWTFJ6TmhSSFl3WVRkbWIyUnlPRWhEZGxseE5tNUhNRkZOY1RO
      U1ZFOXBkbFZtTTFnS1JuQnlhVTh2TDNKSlRDOVlSelE1TTA1NGFWSjBRakVyZEhSUk0wZHNhM1ZE
      ZFVwck1EQkdaREp0ZDNZNFprRnZaR2xUUW5aelQydEpZekZyV25adFN3cEJjR3BEY1ZKMWVHaExU
      MDgzYWxZM1FYSnRTV0p6TkhobVJrUkJVMkZaV2t4R01VMHZhME42ZWs1d1MwTjFhbE5hVUUxRlVt
      WlhhV2RHVGpGMWRqRjNDalpQSzB0b1pTdFJVRU5hUm5CV1kwVndSbTFSTVdwcWFrOVFPV2haSzNW
      alZWSnhSVEkyTlhGTWRuWnFSWE4wUW5WQk4xQkZNRVZ3UkRsaU5VaFZSM1lLTkZKemJXc3pNbFpC
      Vnl0WE5IWk1VRWQwZG1sQ00wSXpUbE0wZUhCdVIzSmlObGs1Y1cwNFZuVTJSRUZIV2xOYWRsbFlk
      bWQwTm1WR2N6RTVTVFZZUWdvMGVtcFVSRUlyTW1sT2NrcE9jM2d5YURoU1VGVnJMMmhZUzFKMGEy
      WnZZMlpKZVRkcGNWY3hiMGRsTlZSMmFqTTFSbXRqUld0YU9VRnpSMjl6WXpWMENuUlZkVlZJWWpS
      ME5EVTFSSE5EWlZWc1ZEZFNOakJDTTB4d1Z6TmlTRTF0YzFCMEx6RktNRFEwYm1KS2RFTkhUM1Jy
      UVVWWVRsVTJlbGxUTDNBMFFqSUtaSFYxY2tZdlNHUnFWWFJNVDNSdlNFTnlZVWd2WkZwaFRVNTZk
      MVZpZUc1VFZXUkdZU3R6TTBaNFJHczFVVkU0VVRaMVVucFpRbWw0WkcxeWREZGpUQXBKYTA1NlEy
      aHBRMDlrY3owS1BVMVZOMk1LTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false